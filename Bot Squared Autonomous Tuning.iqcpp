{"mode":"Text","hardwareTarget":"brain","textContent":"#include \"vex.h\"\n\nusing namespace vex;\n\n// Robot configuration\nbrain Brain;\nmotor FL(PORT1, false);\nmotor FR(PORT12, true);\nmotor SF(PORT6, false);\nmotor SB(PORT7, true);\ninertial BrainInertial;\n\n// Simple waitUntil macro\n#define waitUntil(condition) \\\n  do { wait(5, msec); } while (!(condition))\n\n// Function to spin all drive motors\nvoid setDrivePower(double fl, double fr, double sf, double sb) {\n    FL.setVelocity(fl, percent);\n    FR.setVelocity(fr, percent);\n    SF.setVelocity(sf, percent);\n    SB.setVelocity(sb, percent);\n    FL.spin(forward);\n    FR.spin(forward);\n    SF.spin(forward);\n    SB.spin(forward);\n}\n\n// Function to stop all drive motors\nvoid stopDrive() {\n    FL.stop(hold);\n    FR.stop(hold);\n    SF.stop(hold);\n    SB.stop(hold);\n}\n\nint main() {\n    BrainInertial.calibrate();\n    while (BrainInertial.isCalibrating()) wait(50, msec);\n\n    // Reset motor positions\n    FL.setPosition(0, degrees);\n    FR.setPosition(0, degrees);\n    SF.setPosition(0, degrees);\n    SB.setPosition(0, degrees);\n\n    // Auto-tune variables\n    double kP = 0.0;\n    double step = 0.05;\n    double maxPower = 50.0; // percent\n    double targetAngle = 360; // target rotation in degrees for tuning\n    double tolerance = 5; // degrees\n\n    // First tune clockwise\n    Brain.Screen.clearScreen();\n    Brain.Screen.print(\"Tuning CW...\");\n\n    while (kP < 2.0) {\n        FL.setPosition(0, degrees);\n        FR.setPosition(0, degrees);\n        SF.setPosition(0, degrees);\n        SB.setPosition(0, degrees);\n\n        double error = targetAngle - BrainInertial.heading(degrees);\n        int timeout = 0;\n\n        while (fabs(error) > tolerance && timeout < 100) {\n            error = targetAngle - BrainInertial.heading(degrees);\n            double power = kP * error;\n            if (power > maxPower) power = maxPower;\n            if (power < -maxPower) power = -maxPower;\n\n            setDrivePower(power, -power, power, -power);\n            wait(20, msec);\n            timeout++;\n        }\n\n        if (timeout < 100) break; // succeeded\n        kP += step;\n    }\n    double kP_CW = kP;\n\n    // Then tune counter-clockwise\n    kP = 0.0;\n    targetAngle = -360;\n    Brain.Screen.clearScreen();\n    Brain.Screen.print(\"Tuning CCW...\");\n\n    while (kP < 2.0) {\n        FL.setPosition(0, degrees);\n        FR.setPosition(0, degrees);\n        SF.setPosition(0, degrees);\n        SB.setPosition(0, degrees);\n\n        double error = targetAngle - BrainInertial.heading(degrees);\n        int timeout = 0;\n\n        while (fabs(error) > tolerance && timeout < 100) {\n            error = targetAngle - BrainInertial.heading(degrees);\n            double power = kP * error;\n            if (power > maxPower) power = maxPower;\n            if (power < -maxPower) power = -maxPower;\n\n            setDrivePower(power, -power, power, -power);\n            wait(20, msec);\n            timeout++;\n        }\n\n        if (timeout < 100) break;\n        kP += step;\n    }\n    double kP_CCW = kP;\n\n    // Stop the robot\n    stopDrive();\n\n    // Print results\n    Brain.Screen.clearScreen();\n    Brain.Screen.setCursor(1,1);\n    Brain.Screen.print(\"KP CW: %.2f\", kP_CW);\n    Brain.Screen.newLine();\n    Brain.Screen.print(\"KP CCW: %.2f\", kP_CCW);\n\n    while(true) wait(100, msec); // keep screen displayed\n}\n","textLanguage":"cpp","robotConfig":[{"port":[],"name":"Controller","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","e":"Claw","eDir":"false","f":"Vertical","fDir":"false","l3r3":"","l3r3Dir":"false","drive":"none"},"triportSourcePort":22},{"port":[1],"name":"FL","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[12],"name":"FR","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[6],"name":"SF","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[7],"name":"SB","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[4],"name":"FLLight","customName":true,"deviceType":"TouchLED","deviceClass":"touchled","setting":{},"triportSourcePort":22},{"port":[5],"name":"FRLight","customName":true,"deviceType":"TouchLED","deviceClass":"touchled","setting":{},"triportSourcePort":22},{"port":[3],"name":"BLLight","customName":true,"deviceType":"TouchLED","deviceClass":"touchled","setting":{},"triportSourcePort":22},{"port":[2],"name":"BRLight","customName":true,"deviceType":"TouchLED","deviceClass":"touchled","setting":{},"triportSourcePort":22},{"port":[8],"name":"Vertical","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[9],"name":"Claw","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22}],"slot":1,"platform":"IQ","sdkVersion":"20230818.11.00.00","appVersion":"4.62.0","minVersion":"4.60.0","fileFormat":"2.0.0","targetBrainGen":"Second","v5SoundsEnabled":false,"aiVisionSettings":{"colors":[],"codes":[],"tags":true,"AIObjects":true,"AIObjectModel":[],"aiModelDropDownValue":null},"target":"Physical"}